{"remainingRequest":"C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\src\\components\\CaseEditor.vue?vue&type=template&id=8aaa4f26&scoped=true&","dependencies":[{"path":"C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\src\\components\\CaseEditor.vue","mtime":1616480070000},{"path":"C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678861295872},{"path":"C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1678861295872},{"path":"C:\\Users\\ying123\\Desktop\\大创\\vue_project\\ucase\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}